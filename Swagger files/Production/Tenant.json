{
    "swagger": "2.0",
    "info": {
        "title": "Plex Connect Tenant API",
        "description": "Pragmatic REST API for the Tenant application of the Plex Manufacturing Cloud. All resources require Authorization header for authorization with a current bearer token. Abbreviated example `Bearer eyJ0eXAi...9LA`",
        "version": "1.0.0"
    },
    "host": "api.plex.com",
    "schemes": [
        "https"
    ],
    "basePath": "/tenant",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/v1/Login/CompanyProfile": {
            "get": {
                "summary": "Company Profile",
                "description": "Company Profile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization via bearer token. Abbreviated example `Bearer eyJ0eXAi...9LA`",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company Profile response.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyProfileResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Access not allowed",
                        "schema": {
                            "$ref": "#/definitions/ClientError"
                        }
                    },
                    "404": {
                        "description": "No records found",
                        "schema": {
                            "$ref": "#/definitions/ClientError"
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/Login/CustomerGroupMembers": {
            "get": {
                "summary": "Customer Group Members",
                "description": "Customer Group Members",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization via bearer token. Abbreviated example `Bearer eyJ0eXAi...9LA`",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer Group Members response.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerGroupMembersResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Access not allowed",
                        "schema": {
                            "$ref": "#/definitions/ClientError"
                        }
                    },
                    "404": {
                        "description": "No records found",
                        "schema": {
                            "$ref": "#/definitions/ClientError"
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CustomerGroupMembersResponse": {
            "type": "object",
            "properties": {
                "PlexusCustomerNo": {
                    "type": "integer",
                    "description": "This property is not nullable.",
                    "format": "Signed 32-bit integer"
                },
                "CustomerGroupName": {
                    "type": "string",
                    "description": "This property is not nullable."
                }
            }
        },
        "CompanyProfileResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "This property is nullable."
                },
                "PlexusCustomerCode": {
                    "type": "string",
                    "description": "This property is nullable."
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "status": {
                    "format": "http status code",
                    "type": "integer"
                },
                "detail": {
                    "type": "string"
                },
                "instance": {
                    "format": "url",
                    "type": "string"
                }
            }
        },
        "ClientError": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "status": {
                    "format": "http status code",
                    "type": "integer"
                },
                "detail": {
                    "type": "string"
                },
                "instance": {
                    "format": "url",
                    "type": "string"
                }
            }
        }
    }
}